{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _defineProperty from \"D:/Project/eVoting_FE/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"D:/Project/eVoting_FE/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"D:/Project/eVoting_FE/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"D:\\\\Project\\\\eVoting_FE\\\\components\\\\Event\\\\dashboard.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\"; // node.js library that concatenates classes (strings)\n\nimport { Bar } from \"react-chartjs-2\"; // reactstrap components\n\nimport { Button, Card, CardHeader, CardBody, NavItem, NavLink, Nav, Progress, Table, Container, Row, Col } from \"reactstrap\"; // layout for this page\n\nimport Admin from \"layouts/Admin.js\";\nimport { useRouter } from \"next/router\";\nimport axios from \"axios\";\nimport Highcharts from \"highcharts\";\nimport HighchartsReact from \"highcharts-react-official\"; // core components\n\nvar Dashboard = function Dashboard(props) {\n  _s();\n\n  var _dataVote$series, _options;\n\n  var router = useRouter(); // const Chart = require(\"chart.js\");\n\n  var _useState = useState([]),\n      dataVote = _useState[0],\n      setDataVote = _useState[1];\n\n  var _useState2 = useState(0),\n      totalVote = _useState2[0],\n      setTotalVote = _useState2[1];\n\n  var _useState3 = useState(false),\n      showChart = _useState3[0],\n      setShowChart = _useState3[1];\n\n  var eventId = router.query.eventId;\n\n  var getData = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var _yield$axios$get, res;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return axios.get(\"\".concat(process.env.NEXT_PUBLIC_URL, \"/dashboard/vote-candidate/\").concat(eventId));\n\n            case 2:\n              _yield$axios$get = _context.sent;\n              res = _yield$axios$get.data;\n              setDataVote(res.data);\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function getData() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var getTotalVote = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var _yield$axios$get2, res;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return axios.get(\"\".concat(process.env.NEXT_PUBLIC_URL, \"/vote/isvote/\").concat(eventId));\n\n            case 2:\n              _yield$axios$get2 = _context2.sent;\n              res = _yield$axios$get2.data;\n              setTotalVote(res.data);\n\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function getTotalVote() {\n      return _ref2.apply(this, arguments);\n    };\n  }(); // const options = {\n  //   chart: {\n  //     type: \"column\",\n  //   },\n  //   title: {\n  //     text: \"\",\n  //     align: \"left\",\n  //   },\n  //   subtitle: {\n  //     text: \"\",\n  //     align: \"left\",\n  //   },\n  //   xAxis: {\n  //     categories: dataVote && dataVote.categories,\n  //     crosshair: true,\n  //     accessibility: {\n  //       description: \"Kandidat\",\n  //     },\n  //   },\n  //   credits: {\n  //     enabled: false,\n  //   },\n  //   yAxis: {\n  //     min: 0,\n  //     title: {\n  //       text: \"Jumlah\",\n  //     },\n  //     Animation: true,\n  //   },\n  //   tooltip: {\n  //     valueSuffix: \"\",\n  //   },\n  //   plotOptions: {\n  //     column: {\n  //       pointPadding: 0.2,\n  //       borderWidth: 0,\n  //     },\n  //   },\n  //   series: [{ name: \"Kandidat\", data: dataVote && dataVote?.series?.data }],\n  // };\n\n\n  var options = (_options = {\n    chart: {\n      type: \"bar\"\n    },\n    exporting: {\n      enabled: false\n    }\n  }, _defineProperty(_options, \"exporting\", {\n    enabled: true\n  }), _defineProperty(_options, \"title\", {\n    text: \"\",\n    align: \"left\"\n  }), _defineProperty(_options, \"subtitle\", {\n    text: \"\",\n    align: \"left\"\n  }), _defineProperty(_options, \"xAxis\", {\n    categories: dataVote && dataVote.categories,\n    title: {\n      text: null\n    },\n    gridLineWidth: 1,\n    lineWidth: 0\n  }), _defineProperty(_options, \"yAxis\", {\n    min: 0,\n    title: {\n      text: \"\",\n      align: \"high\"\n    },\n    labels: {\n      overflow: \"justify\"\n    },\n    gridLineWidth: 0,\n    tickInterval: 1\n  }), _defineProperty(_options, \"tooltip\", {\n    x: {\n      formatter: function formatter(value, _ref3) {\n        var series = _ref3.series,\n            seriesIndex = _ref3.seriesIndex,\n            dataPointIndex = _ref3.dataPointIndex,\n            w = _ref3.w;\n        return value;\n      }\n    }\n  }), _defineProperty(_options, \"navigation\", {\n    buttonOptions: {\n      align: \"right\",\n      verticalAlign: \"top\",\n      y: 0\n    }\n  }), _defineProperty(_options, \"plotOptions\", {\n    bar: {\n      borderRadius: \"50%\",\n      dataLabels: {\n        enabled: true\n      },\n      groupPadding: 0.1\n    }\n  }), _defineProperty(_options, \"legend\", {\n    // layout: \"top\",\n    itemDistance: 1,\n    align: \"center\",\n    verticalAlign: \"bottom\",\n    floating: false,\n    borderWidth: 1,\n    backgroundColor: \"#FFFFFF\",\n    shadow: true\n  }), _defineProperty(_options, \"credits\", {\n    enabled: false\n  }), _defineProperty(_options, \"series\", [{\n    name: \"Vote\",\n    data: dataVote && (dataVote === null || dataVote === void 0 ? void 0 : (_dataVote$series = dataVote.series) === null || _dataVote$series === void 0 ? void 0 : _dataVote$series.data)\n  }]), _options);\n\n  var handleActiveChart = function handleActiveChart() {\n    getData();\n    getTotalVote();\n    setShowChart(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      fluid: true,\n      className: \"mt-3\",\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        className: \"justify-content-center\",\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          xl: \"8\",\n          md: \"12\",\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            className: \"shadow\",\n            children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n              className: \"bg-transparent\",\n              children: /*#__PURE__*/_jsxDEV(Row, {\n                className: \"align-items-center\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                    className: \"mb-0\",\n                    children: \"Hasil Vote\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 208,\n                    columnNumber: 21\n                  }, _this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                    className: \"mb-0\",\n                    children: [\"Suara yang masuk adalah \", totalVote, \"Supported by : PT Cahaya Bumi Amanah (cba-digitechno.com)\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 209,\n                    columnNumber: 21\n                  }, _this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 206,\n                  columnNumber: 19\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 17\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(CardBody, {\n              children: [showChart === false ? /*#__PURE__*/_jsxDEV(Button, {\n                onClick: function onClick() {\n                  return handleActiveChart();\n                },\n                color: \"success\",\n                className: \"mb-3\",\n                children: \"Kalkulasi Sekarang\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 218,\n                columnNumber: 19\n              }, _this) : null, showChart ? /*#__PURE__*/_jsxDEV(HighchartsReact, {\n                highcharts: Highcharts,\n                options: options\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 232,\n                columnNumber: 19\n              }, _this) : null]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 15\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false);\n};\n\n_s(Dashboard, \"wQL0Um6W7NokuMZHz4EYJv3S8a8=\", false, function () {\n  return [useRouter];\n});\n\n_c = Dashboard;\nDashboard.layout = Admin;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["D:/Project/eVoting_FE/components/Event/dashboard.js"],"names":["React","useEffect","useState","Bar","Button","Card","CardHeader","CardBody","NavItem","NavLink","Nav","Progress","Table","Container","Row","Col","Admin","useRouter","axios","Highcharts","HighchartsReact","Dashboard","props","router","dataVote","setDataVote","totalVote","setTotalVote","showChart","setShowChart","eventId","query","getData","get","process","env","NEXT_PUBLIC_URL","res","data","getTotalVote","options","chart","type","exporting","enabled","text","align","categories","title","gridLineWidth","lineWidth","min","labels","overflow","tickInterval","x","formatter","value","series","seriesIndex","dataPointIndex","w","buttonOptions","verticalAlign","y","bar","borderRadius","dataLabels","groupPadding","itemDistance","floating","borderWidth","backgroundColor","shadow","name","handleActiveChart","layout"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n// node.js library that concatenates classes (strings)\r\n\r\nimport { Bar } from \"react-chartjs-2\";\r\n// reactstrap components\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  NavItem,\r\n  NavLink,\r\n  Nav,\r\n  Progress,\r\n  Table,\r\n  Container,\r\n  Row,\r\n  Col,\r\n} from \"reactstrap\";\r\n// layout for this page\r\nimport Admin from \"layouts/Admin.js\";\r\nimport { useRouter } from \"next/router\";\r\nimport axios from \"axios\";\r\nimport Highcharts from \"highcharts\";\r\nimport HighchartsReact from \"highcharts-react-official\";\r\n\r\n// core components\r\n\r\nconst Dashboard = (props) => {\r\n  const router = useRouter();\r\n\r\n  // const Chart = require(\"chart.js\");\r\n  const [dataVote, setDataVote] = useState([]);\r\n  const [totalVote, setTotalVote] = useState(0);\r\n  const [showChart, setShowChart] = useState(false);\r\n  const eventId = router.query.eventId;\r\n\r\n  const getData = async () => {\r\n    const { data: res } = await axios.get(\r\n      `${process.env.NEXT_PUBLIC_URL}/dashboard/vote-candidate/${eventId}`\r\n    );\r\n    setDataVote(res.data);\r\n  };\r\n\r\n  const getTotalVote = async () => {\r\n    const { data: res } = await axios.get(\r\n      `${process.env.NEXT_PUBLIC_URL}/vote/isvote/${eventId}`\r\n    );\r\n    setTotalVote(res.data);\r\n  };\r\n\r\n  // const options = {\r\n  //   chart: {\r\n  //     type: \"column\",\r\n  //   },\r\n  //   title: {\r\n  //     text: \"\",\r\n  //     align: \"left\",\r\n  //   },\r\n  //   subtitle: {\r\n  //     text: \"\",\r\n  //     align: \"left\",\r\n  //   },\r\n\r\n  //   xAxis: {\r\n  //     categories: dataVote && dataVote.categories,\r\n  //     crosshair: true,\r\n  //     accessibility: {\r\n  //       description: \"Kandidat\",\r\n  //     },\r\n  //   },\r\n  //   credits: {\r\n  //     enabled: false,\r\n  //   },\r\n  //   yAxis: {\r\n  //     min: 0,\r\n  //     title: {\r\n  //       text: \"Jumlah\",\r\n  //     },\r\n  //     Animation: true,\r\n  //   },\r\n  //   tooltip: {\r\n  //     valueSuffix: \"\",\r\n  //   },\r\n  //   plotOptions: {\r\n  //     column: {\r\n  //       pointPadding: 0.2,\r\n  //       borderWidth: 0,\r\n  //     },\r\n  //   },\r\n  //   series: [{ name: \"Kandidat\", data: dataVote && dataVote?.series?.data }],\r\n  // };\r\n\r\n  const options = {\r\n    chart: {\r\n      type: \"bar\",\r\n    },\r\n    exporting: { enabled: false },\r\n    exporting: {\r\n      enabled: true,\r\n    },\r\n    // exporting: {\r\n    //   buttons: {\r\n    //     contextButton: {\r\n    //       menuItems: [\r\n    //         \"viewFullscreen\",\r\n    //         \"separator\",\r\n    //         \"downloadPNG\",\r\n    //         \"downloadSVG\",\r\n    //         \"downloadPDF\",\r\n    //         \"separator\",\r\n    //         \"downloadXLS\",\r\n    //       ],\r\n    //     },\r\n    //   },\r\n    //   enabled: true,\r\n    // },\r\n\r\n    title: {\r\n      text: \"\",\r\n      align: \"left\",\r\n    },\r\n    subtitle: {\r\n      text: \"\",\r\n\r\n      align: \"left\",\r\n    },\r\n    xAxis: {\r\n      categories: dataVote && dataVote.categories,\r\n      title: {\r\n        text: null,\r\n      },\r\n      gridLineWidth: 1,\r\n      lineWidth: 0,\r\n    },\r\n    yAxis: {\r\n      min: 0,\r\n      title: {\r\n        text: \"\",\r\n        align: \"high\",\r\n      },\r\n      labels: {\r\n        overflow: \"justify\",\r\n      },\r\n      gridLineWidth: 0,\r\n      tickInterval: 1,\r\n    },\r\n    tooltip: {\r\n      x: {\r\n        formatter: function (\r\n          value,\r\n          { series, seriesIndex, dataPointIndex, w }\r\n        ) {\r\n          return value;\r\n        },\r\n      },\r\n    },\r\n\r\n    navigation: {\r\n      buttonOptions: {\r\n        align: \"right\",\r\n        verticalAlign: \"top\",\r\n        y: 0,\r\n      },\r\n    },\r\n    plotOptions: {\r\n      bar: {\r\n        borderRadius: \"50%\",\r\n        dataLabels: {\r\n          enabled: true,\r\n        },\r\n        groupPadding: 0.1,\r\n      },\r\n    },\r\n    legend: {\r\n      // layout: \"top\",\r\n      itemDistance: 1,\r\n      align: \"center\",\r\n      verticalAlign: \"bottom\",\r\n      floating: false,\r\n      borderWidth: 1,\r\n      backgroundColor: \"#FFFFFF\",\r\n      shadow: true,\r\n    },\r\n    credits: {\r\n      enabled: false,\r\n    },\r\n    series: [{ name: \"Vote\", data: dataVote && dataVote?.series?.data }],\r\n  };\r\n\r\n  const handleActiveChart = () => {\r\n    getData();\r\n    getTotalVote();\r\n    setShowChart(true);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* Page content */}\r\n      <Container fluid className=\"mt-3\">\r\n        <Row className=\"justify-content-center\">\r\n          <Col xl=\"8\" md=\"12\">\r\n            <Card className=\"shadow\">\r\n              <CardHeader className=\"bg-transparent\">\r\n                <Row className=\"align-items-center\">\r\n                  <div className=\"col\">\r\n                    {/* <h6 className=\"text-uppercase text-muted ls-1 mb-1\">Performance</h6> */}\r\n                    <h2 className=\"mb-0\">Hasil Vote</h2>\r\n                    <h3 className=\"mb-0\">\r\n                      Suara yang masuk adalah {totalVote}\r\n                      Supported by : PT Cahaya Bumi Amanah (cba-digitechno.com)\r\n                    </h3>\r\n                  </div>\r\n                </Row>\r\n              </CardHeader>\r\n              <CardBody>\r\n                {showChart === false ? (\r\n                  <Button\r\n                    onClick={() => handleActiveChart()}\r\n                    color=\"success\"\r\n                    className=\"mb-3\"\r\n                  >\r\n                    Kalkulasi Sekarang\r\n                  </Button>\r\n                ) : null}\r\n\r\n                {/* Chart */}\r\n                {/* <div className=\"chart\">\r\n                  <Bar data={chartHasilVote.data} options={chartHasilVote.options} />\r\n                </div> */}\r\n                {showChart ? (\r\n                  <HighchartsReact highcharts={Highcharts} options={options} />\r\n                ) : null}\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nDashboard.layout = Admin;\r\n\r\nexport default Dashboard;\r\n"]},"metadata":{},"sourceType":"module"}