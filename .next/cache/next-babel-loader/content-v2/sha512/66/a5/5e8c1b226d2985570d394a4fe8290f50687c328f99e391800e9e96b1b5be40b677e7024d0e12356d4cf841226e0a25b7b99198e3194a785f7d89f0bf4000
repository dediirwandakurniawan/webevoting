{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"D:/eVoting_FE/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"D:/eVoting_FE/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"D:\\\\eVoting_FE\\\\components\\\\Event\\\\dashboard.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\"; // node.js library that concatenates classes (strings)\n\nimport { Bar } from \"react-chartjs-2\"; // reactstrap components\n\nimport { Button, Card, CardHeader, CardBody, NavItem, NavLink, Nav, Progress, Table, Container, Row, Col } from \"reactstrap\"; // layout for this page\n\nimport Admin from \"layouts/Admin.js\";\nimport { useRouter } from \"next/router\";\nimport axios from \"axios\";\nimport Highcharts from \"highcharts\";\nimport HighchartsReact from \"highcharts-react-official\"; // core components\n\nvar Dashboard = function Dashboard(props) {\n  _s();\n\n  var router = useRouter();\n\n  var Chart = require(\"chart.js\");\n\n  var _useState = useState([]),\n      dataVote = _useState[0],\n      setDataVote = _useState[1];\n\n  var eventId = router.query.eventId;\n\n  var getData = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var _yield$axios$get, res;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return axios.get(\"\".concat(process.env.NEXT_PUBLIC_URL, \"/dashboard/vote-candidate/\").concat(eventId));\n\n            case 2:\n              _yield$axios$get = _context.sent;\n              res = _yield$axios$get.data;\n              console.log(res.data);\n              setDataVote(res.data);\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function getData() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var options = {\n    chart: {\n      type: \"column\"\n    },\n    title: {\n      text: \"\",\n      align: \"left\"\n    },\n    subtitle: {\n      text: \"\",\n      align: \"left\"\n    },\n    xAxis: {\n      categories: dataVote && dataVote.categories,\n      crosshair: true,\n      accessibility: {\n        description: \"Kandidat\"\n      }\n    },\n    yAxis: {\n      min: 0,\n      title: {\n        text: \"Jumlah\"\n      }\n    },\n    tooltip: {\n      valueSuffix: \"\"\n    },\n    plotOptions: {\n      column: {\n        pointPadding: 0.2,\n        borderWidth: 0\n      }\n    },\n    series: [{\n      name: \"Kandidat\",\n      data: dataVote && dataVote.series.data\n    }]\n  };\n  useEffect(function () {\n    getData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      fluid: true,\n      className: \"mt-3\",\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        className: \"justify-content-center\",\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          xl: \"8\",\n          md: \"12\",\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            className: \"shadow\",\n            children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n              className: \"bg-transparent\",\n              children: /*#__PURE__*/_jsxDEV(Row, {\n                className: \"align-items-center\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col\",\n                  children: /*#__PURE__*/_jsxDEV(\"h2\", {\n                    className: \"mb-0\",\n                    children: \"Hasil Vote\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 81,\n                    columnNumber: 21\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 79,\n                  columnNumber: 19\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 17\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(CardBody, {\n              children: /*#__PURE__*/_jsxDEV(HighchartsReact, {\n                highcharts: Highcharts,\n                options: options\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 17\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 15\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false);\n};\n\n_s(Dashboard, \"ixCJpdtHoI1cjuhhGYsSpNOvlkM=\", false, function () {\n  return [useRouter];\n});\n\n_c = Dashboard;\nDashboard.layout = Admin;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["D:/eVoting_FE/components/Event/dashboard.js"],"names":["React","useEffect","useState","Bar","Button","Card","CardHeader","CardBody","NavItem","NavLink","Nav","Progress","Table","Container","Row","Col","Admin","useRouter","axios","Highcharts","HighchartsReact","Dashboard","props","router","Chart","require","dataVote","setDataVote","eventId","query","getData","get","process","env","NEXT_PUBLIC_URL","res","data","console","log","options","chart","type","title","text","align","subtitle","xAxis","categories","crosshair","accessibility","description","yAxis","min","tooltip","valueSuffix","plotOptions","column","pointPadding","borderWidth","series","name","layout"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n// node.js library that concatenates classes (strings)\r\n\r\nimport { Bar } from \"react-chartjs-2\";\r\n// reactstrap components\r\nimport { Button, Card, CardHeader, CardBody, NavItem, NavLink, Nav, Progress, Table, Container, Row, Col } from \"reactstrap\";\r\n// layout for this page\r\nimport Admin from \"layouts/Admin.js\";\r\nimport { useRouter } from \"next/router\";\r\nimport axios from \"axios\";\r\nimport Highcharts from \"highcharts\";\r\nimport HighchartsReact from \"highcharts-react-official\";\r\n\r\n// core components\r\n\r\nconst Dashboard = (props) => {\r\n  const router = useRouter();\r\n\r\n  const Chart = require(\"chart.js\");\r\n  const [dataVote, setDataVote] = useState([]);\r\n  const eventId = router.query.eventId;\r\n\r\n  const getData = async () => {\r\n    const { data: res } = await axios.get(`${process.env.NEXT_PUBLIC_URL}/dashboard/vote-candidate/${eventId}`);\r\n    console.log(res.data);\r\n    setDataVote(res.data);\r\n  };\r\n\r\n  const options = {\r\n    chart: {\r\n      type: \"column\",\r\n    },\r\n    title: {\r\n      text: \"\",\r\n      align: \"left\",\r\n    },\r\n    subtitle: {\r\n      text: \"\",\r\n      align: \"left\",\r\n    },\r\n    xAxis: {\r\n      categories: dataVote && dataVote.categories,\r\n      crosshair: true,\r\n      accessibility: {\r\n        description: \"Kandidat\",\r\n      },\r\n    },\r\n    yAxis: {\r\n      min: 0,\r\n      title: {\r\n        text: \"Jumlah\",\r\n      },\r\n    },\r\n    tooltip: {\r\n      valueSuffix: \"\",\r\n    },\r\n    plotOptions: {\r\n      column: {\r\n        pointPadding: 0.2,\r\n        borderWidth: 0,\r\n      },\r\n    },\r\n    series: [{ name: \"Kandidat\", data: dataVote && dataVote.series.data }],\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {/* Page content */}\r\n      <Container fluid className=\"mt-3\">\r\n        <Row className=\"justify-content-center\">\r\n          <Col xl=\"8\" md=\"12\">\r\n            <Card className=\"shadow\">\r\n              <CardHeader className=\"bg-transparent\">\r\n                <Row className=\"align-items-center\">\r\n                  <div className=\"col\">\r\n                    {/* <h6 className=\"text-uppercase text-muted ls-1 mb-1\">Performance</h6> */}\r\n                    <h2 className=\"mb-0\">Hasil Vote</h2>\r\n                  </div>\r\n                </Row>\r\n              </CardHeader>\r\n              <CardBody>\r\n                {/* Chart */}\r\n                {/* <div className=\"chart\">\r\n                  <Bar data={chartHasilVote.data} options={chartHasilVote.options} />\r\n                </div> */}\r\n                <HighchartsReact highcharts={Highcharts} options={options} />\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nDashboard.layout = Admin;\r\n\r\nexport default Dashboard;\r\n"]},"metadata":{},"sourceType":"module"}