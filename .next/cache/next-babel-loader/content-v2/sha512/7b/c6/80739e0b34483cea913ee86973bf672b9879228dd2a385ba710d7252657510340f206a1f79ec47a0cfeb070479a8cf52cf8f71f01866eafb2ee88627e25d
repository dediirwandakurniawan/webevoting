{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"D:/CBA/E-Voting/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"D:/CBA/E-Voting/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"D:\\\\CBA\\\\E-Voting\\\\components\\\\Event\\\\dashboard.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\"; // node.js library that concatenates classes (strings)\n\nimport { Bar } from \"react-chartjs-2\"; // reactstrap components\n\nimport { Button, Card, CardHeader, CardBody, NavItem, NavLink, Nav, Progress, Table, Container, Row, Col } from \"reactstrap\"; // layout for this page\n\nimport Admin from \"layouts/Admin.js\";\nimport { useRouter } from \"next/router\";\nimport axios from \"axios\";\nimport Highcharts from \"highcharts\"; // core components\n\nvar Dashboard = function Dashboard(props) {\n  _s();\n\n  var router = useRouter();\n\n  var Chart = require(\"chart.js\");\n\n  var _useState = useState([]),\n      dataVote = _useState[0],\n      setDataVote = _useState[1];\n\n  var eventId = router.query.eventId;\n  var chartHasilVote = {\n    options: {\n      scales: {\n        yAxes: [{\n          ticks: {\n            callback: function callback(value) {\n              if (!(value % 10)) {\n                //return '$' + value + 'k'\n                return value;\n              }\n            }\n          }\n        }]\n      },\n      tooltips: {\n        callbacks: {\n          label: function label(item, data) {\n            var label = data.datasets[item.datasetIndex].label || \"\";\n            var yLabel = item.yLabel;\n            var content = \"\";\n\n            if (data.datasets.length > 1) {\n              content += label;\n            }\n\n            content += yLabel;\n            return content;\n          }\n        }\n      }\n    },\n    data: {\n      labels: dataVote && dataVote.name,\n      // labels: [\"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"],\n      datasets: [{\n        label: \"Jumlah\",\n        // data: [25, 20, 30, 22, 17, 29],\n        data: dataVote && dataVote.data,\n        maxBarThickness: 10\n      }]\n    }\n  };\n\n  var getData = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var _yield$axios$get, res;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return axios.get(\"\".concat(process.env.NEXT_PUBLIC_URL, \"/dashboard/vote-candidate/\").concat(eventId));\n\n            case 2:\n              _yield$axios$get = _context.sent;\n              res = _yield$axios$get.data;\n              setDataVote(res.data.series);\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function getData() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var chart = Highcharts.chart(\"container\", {\n    chart: {\n      type: \"bar\"\n    },\n    title: {\n      text: \"Fruit Consumption\"\n    },\n    xAxis: {\n      categories: [\"Apples\", \"Bananas\", \"Oranges\"]\n    },\n    yAxis: {\n      title: {\n        text: \"Fruit eaten\"\n      }\n    },\n    series: [{\n      name: \"Jane\",\n      data: [1, 0, 4]\n    }, {\n      name: \"John\",\n      data: [5, 7, 3]\n    }]\n  });\n  useEffect(function () {\n    getData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      fluid: true,\n      className: \"mt-3\",\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        className: \"justify-content-center\",\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          xl: \"6\",\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            className: \"shadow\",\n            children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n              className: \"bg-transparent\",\n              children: /*#__PURE__*/_jsxDEV(Row, {\n                className: \"align-items-center\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col\",\n                  children: /*#__PURE__*/_jsxDEV(\"h2\", {\n                    className: \"mb-0\",\n                    children: \"Hasil Vote\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 114,\n                    columnNumber: 21\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 112,\n                  columnNumber: 19\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 17\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(CardBody, {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                id: \"container\",\n                style: \"width:100%; height:400px;\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 17\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 15\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false);\n};\n\n_s(Dashboard, \"ixCJpdtHoI1cjuhhGYsSpNOvlkM=\", false, function () {\n  return [useRouter];\n});\n\n_c = Dashboard;\nDashboard.layout = Admin;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["D:/CBA/E-Voting/components/Event/dashboard.js"],"names":["React","useEffect","useState","Bar","Button","Card","CardHeader","CardBody","NavItem","NavLink","Nav","Progress","Table","Container","Row","Col","Admin","useRouter","axios","Highcharts","Dashboard","props","router","Chart","require","dataVote","setDataVote","eventId","query","chartHasilVote","options","scales","yAxes","ticks","callback","value","tooltips","callbacks","label","item","data","datasets","datasetIndex","yLabel","content","length","labels","name","maxBarThickness","getData","get","process","env","NEXT_PUBLIC_URL","res","series","chart","type","title","text","xAxis","categories","yAxis","layout"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\n// node.js library that concatenates classes (strings)\n\nimport { Bar } from \"react-chartjs-2\";\n// reactstrap components\nimport { Button, Card, CardHeader, CardBody, NavItem, NavLink, Nav, Progress, Table, Container, Row, Col } from \"reactstrap\";\n// layout for this page\nimport Admin from \"layouts/Admin.js\";\nimport { useRouter } from \"next/router\";\nimport axios from \"axios\";\nimport Highcharts from \"highcharts\";\n\n// core components\n\nconst Dashboard = (props) => {\n  const router = useRouter();\n\n  const Chart = require(\"chart.js\");\n  const [dataVote, setDataVote] = useState([]);\n  const eventId = router.query.eventId;\n\n  let chartHasilVote = {\n    options: {\n      scales: {\n        yAxes: [\n          {\n            ticks: {\n              callback: function (value) {\n                if (!(value % 10)) {\n                  //return '$' + value + 'k'\n                  return value;\n                }\n              },\n            },\n          },\n        ],\n      },\n      tooltips: {\n        callbacks: {\n          label: function (item, data) {\n            var label = data.datasets[item.datasetIndex].label || \"\";\n            var yLabel = item.yLabel;\n            var content = \"\";\n            if (data.datasets.length > 1) {\n              content += label;\n            }\n            content += yLabel;\n            return content;\n          },\n        },\n      },\n    },\n    data: {\n      labels: dataVote && dataVote.name,\n      // labels: [\"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"],\n      datasets: [\n        {\n          label: \"Jumlah\",\n          // data: [25, 20, 30, 22, 17, 29],\n          data: dataVote && dataVote.data,\n          maxBarThickness: 10,\n        },\n      ],\n    },\n  };\n\n  const getData = async () => {\n    const { data: res } = await axios.get(`${process.env.NEXT_PUBLIC_URL}/dashboard/vote-candidate/${eventId}`);\n    setDataVote(res.data.series);\n  };\n\n  const chart = Highcharts.chart(\"container\", {\n    chart: {\n      type: \"bar\",\n    },\n    title: {\n      text: \"Fruit Consumption\",\n    },\n    xAxis: {\n      categories: [\"Apples\", \"Bananas\", \"Oranges\"],\n    },\n    yAxis: {\n      title: {\n        text: \"Fruit eaten\",\n      },\n    },\n    series: [\n      {\n        name: \"Jane\",\n        data: [1, 0, 4],\n      },\n      {\n        name: \"John\",\n        data: [5, 7, 3],\n      },\n    ],\n  });\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  return (\n    <>\n      {/* Page content */}\n      <Container fluid className=\"mt-3\">\n        <Row className=\"justify-content-center\">\n          <Col xl=\"6\">\n            <Card className=\"shadow\">\n              <CardHeader className=\"bg-transparent\">\n                <Row className=\"align-items-center\">\n                  <div className=\"col\">\n                    {/* <h6 className=\"text-uppercase text-muted ls-1 mb-1\">Performance</h6> */}\n                    <h2 className=\"mb-0\">Hasil Vote</h2>\n                  </div>\n                </Row>\n              </CardHeader>\n              <CardBody>\n                {/* Chart */}\n                {/* <div className=\"chart\">\n                  <Bar data={chartHasilVote.data} options={chartHasilVote.options} />\n                </div> */}\n                <div id=\"container\" style=\"width:100%; height:400px;\"></div>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n      </Container>\n    </>\n  );\n};\n\nDashboard.layout = Admin;\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}