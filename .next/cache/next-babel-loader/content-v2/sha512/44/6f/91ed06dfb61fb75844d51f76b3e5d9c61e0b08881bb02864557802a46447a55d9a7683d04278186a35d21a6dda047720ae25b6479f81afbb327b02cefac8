{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"D:/CBA/E-Voting/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"D:/CBA/E-Voting/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"D:\\\\CBA\\\\E-Voting\\\\components\\\\Event\\\\dashboard.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\"; // node.js library that concatenates classes (strings)\n\nimport { Bar } from \"react-chartjs-2\"; // reactstrap components\n\nimport { Button, Card, CardHeader, CardBody, NavItem, NavLink, Nav, Progress, Table, Container, Row, Col } from \"reactstrap\"; // layout for this page\n\nimport Admin from \"layouts/Admin.js\";\nimport { useRouter } from \"next/router\";\nimport axios from \"axios\";\nimport Highcharts from \"highcharts\";\nimport HighchartsReact from \"highcharts-react-official\"; // core components\n\nvar Dashboard = function Dashboard(props) {\n  _s();\n\n  var router = useRouter();\n\n  var Chart = require(\"chart.js\");\n\n  var _useState = useState([]),\n      dataVote = _useState[0],\n      setDataVote = _useState[1];\n\n  var eventId = router.query.eventId;\n\n  var getData = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var _yield$axios$get, res;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return axios.get(\"\".concat(process.env.NEXT_PUBLIC_URL, \"/dashboard/vote-candidate/\").concat(eventId));\n\n            case 2:\n              _yield$axios$get = _context.sent;\n              res = _yield$axios$get.data;\n              setDataVote(res.data.series);\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function getData() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var options = {\n    chart: {\n      type: \"spline\"\n    },\n    title: {\n      text: \"My chart\"\n    },\n    series: [{\n      data: [1, 2, 1, 4, 3, 6]\n    }]\n  };\n  useEffect(function () {\n    getData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      fluid: true,\n      className: \"mt-3\",\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        className: \"justify-content-center\",\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          xl: \"6\",\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            className: \"shadow\",\n            children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n              className: \"bg-transparent\",\n              children: /*#__PURE__*/_jsxDEV(Row, {\n                className: \"align-items-center\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col\",\n                  children: /*#__PURE__*/_jsxDEV(\"h2\", {\n                    className: \"mb-0\",\n                    children: \"Hasil Vote\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 57,\n                    columnNumber: 21\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 55,\n                  columnNumber: 19\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 17\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(CardBody, {\n              children: /*#__PURE__*/_jsxDEV(HighchartsReact, {\n                highcharts: Highcharts,\n                options: options\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 17\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 15\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false);\n};\n\n_s(Dashboard, \"ixCJpdtHoI1cjuhhGYsSpNOvlkM=\", false, function () {\n  return [useRouter];\n});\n\n_c = Dashboard;\nDashboard.layout = Admin;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["D:/CBA/E-Voting/components/Event/dashboard.js"],"names":["React","useEffect","useState","Bar","Button","Card","CardHeader","CardBody","NavItem","NavLink","Nav","Progress","Table","Container","Row","Col","Admin","useRouter","axios","Highcharts","HighchartsReact","Dashboard","props","router","Chart","require","dataVote","setDataVote","eventId","query","getData","get","process","env","NEXT_PUBLIC_URL","res","data","series","options","chart","type","title","text","layout"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\n// node.js library that concatenates classes (strings)\n\nimport { Bar } from \"react-chartjs-2\";\n// reactstrap components\nimport { Button, Card, CardHeader, CardBody, NavItem, NavLink, Nav, Progress, Table, Container, Row, Col } from \"reactstrap\";\n// layout for this page\nimport Admin from \"layouts/Admin.js\";\nimport { useRouter } from \"next/router\";\nimport axios from \"axios\";\nimport Highcharts from \"highcharts\";\nimport HighchartsReact from \"highcharts-react-official\";\n\n// core components\n\nconst Dashboard = (props) => {\n  const router = useRouter();\n\n  const Chart = require(\"chart.js\");\n  const [dataVote, setDataVote] = useState([]);\n  const eventId = router.query.eventId;\n\n  const getData = async () => {\n    const { data: res } = await axios.get(`${process.env.NEXT_PUBLIC_URL}/dashboard/vote-candidate/${eventId}`);\n    setDataVote(res.data.series);\n  };\n\n  const options = {\n    chart: {\n      type: \"spline\",\n    },\n    title: {\n      text: \"My chart\",\n    },\n    series: [\n      {\n        data: [1, 2, 1, 4, 3, 6],\n      },\n    ],\n  };\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  return (\n    <>\n      {/* Page content */}\n      <Container fluid className=\"mt-3\">\n        <Row className=\"justify-content-center\">\n          <Col xl=\"6\">\n            <Card className=\"shadow\">\n              <CardHeader className=\"bg-transparent\">\n                <Row className=\"align-items-center\">\n                  <div className=\"col\">\n                    {/* <h6 className=\"text-uppercase text-muted ls-1 mb-1\">Performance</h6> */}\n                    <h2 className=\"mb-0\">Hasil Vote</h2>\n                  </div>\n                </Row>\n              </CardHeader>\n              <CardBody>\n                {/* Chart */}\n                {/* <div className=\"chart\">\n                  <Bar data={chartHasilVote.data} options={chartHasilVote.options} />\n                </div> */}\n                <HighchartsReact highcharts={Highcharts} options={options} />\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n      </Container>\n    </>\n  );\n};\n\nDashboard.layout = Admin;\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}