{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React, { useEffect, useState } from \"react\"; // node.js library that concatenates classes (strings)\n\nimport { Bar } from \"react-chartjs-2\"; // reactstrap components\n\nimport { Button, Card, CardHeader, CardBody, NavItem, NavLink, Nav, Progress, Table, Container, Row, Col } from \"reactstrap\"; // layout for this page\n\nimport Admin from \"layouts/Admin.js\";\nimport { useRouter } from \"next/router\";\nimport axios from \"axios\";\nimport Highcharts from \"highcharts\";\nimport HighchartsReact from \"highcharts-react-official\"; // core components\n\nconst Dashboard = props => {\n  var _dataVote$series;\n\n  const router = useRouter();\n\n  const Chart = require(\"chart.js\");\n\n  const {\n    0: dataVote,\n    1: setDataVote\n  } = useState([]);\n  const eventId = router.query.eventId;\n\n  const getData = async () => {\n    const {\n      data: res\n    } = await axios.get(`${process.env.NEXT_PUBLIC_URL}/dashboard/vote-candidate/${eventId}`);\n    console.log(res.data);\n    setDataVote(res.data);\n  };\n\n  const options = {\n    chart: {\n      type: \"column\"\n    },\n    title: {\n      text: \"\",\n      align: \"left\"\n    },\n    subtitle: {\n      text: \"\",\n      align: \"left\"\n    },\n    xAxis: {\n      categories: dataVote && dataVote.categories,\n      crosshair: true,\n      accessibility: {\n        description: \"Kandidat\"\n      }\n    },\n    yAxis: {\n      min: 0,\n      title: {\n        text: \"Jumlah\"\n      }\n    },\n    tooltip: {\n      valueSuffix: \"\"\n    },\n    plotOptions: {\n      column: {\n        pointPadding: 0.2,\n        borderWidth: 0\n      }\n    },\n    series: [{\n      name: \"Kandidat\",\n      data: dataVote && (dataVote === null || dataVote === void 0 ? void 0 : (_dataVote$series = dataVote.series) === null || _dataVote$series === void 0 ? void 0 : _dataVote$series.data)\n    }]\n  };\n  useEffect(() => {\n    getData();\n  }, []);\n  return /*#__PURE__*/_jsx(_Fragment, {\n    children: /*#__PURE__*/_jsx(Container, {\n      fluid: true,\n      className: \"mt-3\",\n      children: /*#__PURE__*/_jsx(Row, {\n        className: \"justify-content-center\",\n        children: /*#__PURE__*/_jsx(Col, {\n          xl: \"8\",\n          md: \"12\",\n          children: /*#__PURE__*/_jsxs(Card, {\n            className: \"shadow\",\n            children: [/*#__PURE__*/_jsx(CardHeader, {\n              className: \"bg-transparent\",\n              children: /*#__PURE__*/_jsx(Row, {\n                className: \"align-items-center\",\n                children: /*#__PURE__*/_jsx(\"div\", {\n                  className: \"col\",\n                  children: /*#__PURE__*/_jsx(\"h2\", {\n                    className: \"mb-0\",\n                    children: \"Hasil Vote\"\n                  })\n                })\n              })\n            }), /*#__PURE__*/_jsx(CardBody, {\n              children: /*#__PURE__*/_jsx(HighchartsReact, {\n                highcharts: Highcharts,\n                options: options\n              })\n            })]\n          })\n        })\n      })\n    })\n  });\n};\n\nDashboard.layout = Admin;\nexport default Dashboard;","map":null,"metadata":{},"sourceType":"module"}