{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport _regeneratorRuntime from \"D:/Project/eVoting_FE/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"D:/Project/eVoting_FE/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React, { useState, useEffect } from \"react\";\nimport { useRouter } from \"next/router\"; // reactstrap components\n\nimport { Button, Card, CardHeader, CardBody, FormGroup, Form, Input, Container, Row, Col, Badge, Modal, ModalHeader, ModalBody, ModalFooter, Label } from \"reactstrap\"; // core components\n\nimport DataTable from \"react-data-table-component\";\nimport Swal from \"sweetalert2\";\nimport axios from \"axios\";\nimport Cookies from \"universal-cookie\";\n\nvar Token = function Token() {\n  var router = useRouter();\n  var eventId = router.query.eventId;\n  var cookies = new Cookies();\n\n  var _useState = useState(false),\n      modal = _useState[0],\n      setModal = _useState[1];\n\n  var _useState2 = useState(\"create\"),\n      action = _useState2[0],\n      setAction = _useState2[1];\n\n  var _useState3 = useState(false),\n      loading = _useState3[0],\n      setLoading = _useState3[1];\n\n  var _useState4 = useState(10),\n      perPage = _useState4[0],\n      setPerPage = _useState4[1];\n\n  var _useState5 = useState(1),\n      currentPage = _useState5[0],\n      setCurrentPage = _useState5[1];\n\n  var _useState6 = useState(0),\n      totalRows = _useState6[0],\n      setTotalRows = _useState6[1];\n\n  var _useState7 = useState([]),\n      data = _useState7[0],\n      setData = _useState7[1];\n\n  var _useState8 = useState(0),\n      jumlahToken = _useState8[0],\n      setJumlahToken = _useState8[1];\n\n  var toggle = function toggle() {\n    return setModal(!modal);\n  };\n\n  var columns = [{\n    name: \"Tanggal Generate\",\n    selector: function selector(row) {\n      return row.created_date;\n    }\n  }, {\n    name: \"Token\",\n    selector: function selector(row) {\n      return row.token;\n    }\n  }, {\n    name: \"Is Valid\",\n    selector: function selector(row) {\n      return /*#__PURE__*/_jsx(_Fragment, {\n        children: row.is_valid == 1 ? /*#__PURE__*/_jsx(Badge, {\n          color: \"primary\",\n          pill: true,\n          children: \"Yes\"\n        }) : /*#__PURE__*/_jsx(Badge, {\n          color: \"danger\",\n          pill: true,\n          children: \"No\"\n        })\n      });\n    }\n  }, {\n    name: \"Done Vote\",\n    selector: function selector(row) {\n      return /*#__PURE__*/_jsx(_Fragment, {\n        children: row.is_vote == 1 ? /*#__PURE__*/_jsx(Badge, {\n          color: \"primary\",\n          pill: true,\n          children: \"Yes\"\n        }) : /*#__PURE__*/_jsx(Badge, {\n          color: \"danger\",\n          pill: true,\n          children: \"No\"\n        })\n      });\n    }\n  }, {\n    name: \"Action\",\n    selector: function selector(row) {\n      return /*#__PURE__*/_jsx(_Fragment, {\n        children: /*#__PURE__*/_jsx(Button, {\n          onClick: function onClick() {\n            return handleDelete(row.id);\n          },\n          color: \"danger\",\n          size: \"sm\",\n          children: \"Hapus\"\n        })\n      });\n    }\n  }];\n\n  var handleDelete = function handleDelete(id) {\n    Swal.fire({\n      title: \"Anda Yakin ?\",\n      text: \"Data yang telah dihapus tidak dapat dikembalikan!\",\n      icon: \"warning\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Yakin!\"\n    }).then(function (result) {\n      if (result.isConfirmed) {\n        axios[\"delete\"](\"\".concat(process.env.NEXT_PUBLIC_URL, \"/token/\").concat(id, \" \"), {\n          headers: {\n            Authorization: \"Bearer \".concat(cookies.get(\"token\"))\n          }\n        }).then(function (res) {\n          Swal.fire({\n            icon: \"success\",\n            title: \"Berhasil\",\n            text: \"Data Berhasil Dihapus !\"\n          });\n          getData();\n        });\n      }\n    });\n  };\n\n  var getData = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var _yield$axios$get, res;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setLoading(true);\n              _context.next = 3;\n              return axios.get(\"\".concat(process.env.NEXT_PUBLIC_URL, \"/token/\").concat(eventId, \"/?page=\").concat(currentPage, \"&size=\").concat(perPage));\n\n            case 3:\n              _yield$axios$get = _context.sent;\n              res = _yield$axios$get.data;\n              setTotalRows(res.data.totalData);\n              setData(res.data.content);\n              setLoading(false);\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function getData() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    getData();\n  }, []);\n\n  var handleSubmit = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var data;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              data = {\n                number_token: jumlahToken\n              };\n              console.log(data);\n              _context2.next = 4;\n              return axios.post(\"\".concat(process.env.NEXT_PUBLIC_URL, \"/token/\").concat(eventId), data, {\n                headers: {\n                  Authorization: \"Bearer \".concat(cookies.get(\"token\"))\n                }\n              }).then(function (res) {\n                Swal.fire({\n                  icon: \"success\",\n                  title: \"Berhasil\",\n                  text: \"Token berhasil dibuat !\"\n                });\n                setModal(false);\n                getData();\n              })[\"catch\"](function (e) {\n                var _e$response, _e$response$data;\n\n                console.log(e);\n\n                if (e !== null && e !== void 0 && (_e$response = e.response) !== null && _e$response !== void 0 && (_e$response$data = _e$response.data) !== null && _e$response$data !== void 0 && _e$response$data.error_messages) {\n                  var _e$response2, _e$response2$data, _e$response2$data$err;\n\n                  Swal.fire({\n                    icon: \"error\",\n                    title: \"Terjadi Kesalahan!\",\n                    text: e === null || e === void 0 ? void 0 : (_e$response2 = e.response) === null || _e$response2 === void 0 ? void 0 : (_e$response2$data = _e$response2.data) === null || _e$response2$data === void 0 ? void 0 : (_e$response2$data$err = _e$response2$data.error_messages[0]) === null || _e$response2$data$err === void 0 ? void 0 : _e$response2$data$err.msg\n                  });\n                } else {\n                  Swal.fire({\n                    icon: \"error\",\n                    title: \"Terjadi Kesalahan!\",\n                    text: e\n                  });\n                }\n              });\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function handleSubmit() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(Row, {\n      children: /*#__PURE__*/_jsx(Col, {\n        children: /*#__PURE__*/_jsx(Card, {\n          className: \"shadow\",\n          children: /*#__PURE__*/_jsxs(CardBody, {\n            children: [/*#__PURE__*/_jsx(Button, {\n              color: \"danger\",\n              onClick: toggle,\n              children: \"Generate Token\"\n            }), /*#__PURE__*/_jsx(Row, {\n              children: /*#__PURE__*/_jsx(Col, {\n                children: /*#__PURE__*/_jsx(DataTable, {\n                  columns: columns,\n                  data: data,\n                  pagination: true\n                })\n              })\n            })]\n          })\n        })\n      })\n    }), /*#__PURE__*/_jsxs(Modal, {\n      isOpen: modal,\n      toggle: toggle,\n      children: [/*#__PURE__*/_jsx(ModalHeader, {\n        toggle: toggle,\n        children: \"Generate Token\"\n      }), /*#__PURE__*/_jsx(ModalBody, {\n        children: /*#__PURE__*/_jsx(Form, {\n          children: /*#__PURE__*/_jsxs(FormGroup, {\n            children: [/*#__PURE__*/_jsx(Label, {\n              \"for\": \"jumlahToken\",\n              children: \"Jumlah Token\"\n            }), /*#__PURE__*/_jsx(Input, {\n              id: \"jumlahToken\",\n              name: \"jumlah_token\",\n              placeholder: \"Masukkan jumlah token\",\n              type: \"number\",\n              onChange: function onChange(e) {\n                return setJumlahToken(e.target.value);\n              }\n            })]\n          })\n        })\n      }), /*#__PURE__*/_jsxs(ModalFooter, {\n        children: [/*#__PURE__*/_jsx(Button, {\n          color: \"primary\",\n          onClick: function onClick() {\n            return handleSubmit();\n          },\n          children: \"Simpan\"\n        }), \" \", /*#__PURE__*/_jsx(Button, {\n          color: \"secondary\",\n          onClick: toggle,\n          children: \"Cancel\"\n        })]\n      })]\n    })]\n  });\n};\n\nexport default Token;","map":null,"metadata":{},"sourceType":"module"}