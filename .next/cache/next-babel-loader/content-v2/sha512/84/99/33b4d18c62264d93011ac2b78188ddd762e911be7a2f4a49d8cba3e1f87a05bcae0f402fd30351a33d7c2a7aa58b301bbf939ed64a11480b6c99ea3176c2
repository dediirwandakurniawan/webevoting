{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\eVoting_FE\\\\components\\\\Event\\\\tableCalon.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState } from \"react\";\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Form, FormGroup, Label, Input } from \"reactstrap\";\nimport DataTable from \"react-data-table-component\";\n\nconst TableCalon = () => {\n  const {\n    0: modalCalon,\n    1: setModalCalon\n  } = useState(false);\n  const {\n    0: selectedData,\n    1: setSelectedData\n  } = useState(null);\n\n  const toggleModalCalon = () => {\n    setModalCalon(!modalCalon);\n  };\n\n  const columnCalon = [{\n    name: \"Nama\",\n    selector: row => row.namaCalon\n  }, {\n    name: \"Foto\",\n    cell: row => /*#__PURE__*/_jsxDEV(\"img\", {\n      src: row.fotoCalon,\n      alt: row.namaCalon,\n      style: {\n        width: \"50px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 22\n    }, this)\n  }, {\n    name: \"Action\",\n    cell: row => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => handleEdit(row),\n        outline: true,\n        color: \"primary\",\n        size: \"sm\",\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => handleDelete(row),\n        outline: true,\n        color: \"danger\",\n        size: \"sm\",\n        children: \"Hapus\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }];\n  const dataCalon = [{\n    id: 1,\n    namaCalon: \"Joseph Stalin\",\n    fotoCalon: \"https://example.com/beetlejuice.jpg\"\n  }, {\n    id: 2,\n    namaCalon: \"Hideki Tojo\",\n    fotoCalon: \"https://example.com/ghostbusters.jpg\"\n  }];\n\n  const handleEdit = row => {\n    setSelectedData(row);\n    toggleModalCalon();\n  };\n\n  const handleDelete = row => {\n    console.log(\"Delete row:\", row);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(DataTable, {\n      columns: columnCalon,\n      data: dataCalon\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: modalCalon,\n      toggle: toggleModalCalon,\n      children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n        toggle: toggleModalCalon,\n        children: \"Edit Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              for: \"nama\",\n              children: \"Nama\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"text\",\n              id: \"nama\",\n              value: selectedData === null || selectedData === void 0 ? void 0 : selectedData.namaCalon,\n              onChange: e => setSelectedData(_objectSpread(_objectSpread({}, selectedData), {}, {\n                namaCalon: e.target.value\n              }))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              for: \"foto\",\n              children: \"Foto\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"text\",\n              id: \"foto\",\n              value: selectedData === null || selectedData === void 0 ? void 0 : selectedData.fotoCalon,\n              onChange: e => setSelectedData(_objectSpread(_objectSpread({}, selectedData), {}, {\n                fotoCalon: e.target.value\n              }))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ModalFooter, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          color: \"primary\",\n          onClick: () => console.log(\"Save changes\", selectedData),\n          children: \"Simpan\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), \" \", /*#__PURE__*/_jsxDEV(Button, {\n          color: \"secondary\",\n          onClick: toggleModalCalon,\n          children: \"Batal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\nexport default TableCalon;","map":{"version":3,"sources":["D:/eVoting_FE/components/Event/tableCalon.js"],"names":["React","useState","Button","Modal","ModalHeader","ModalBody","ModalFooter","Form","FormGroup","Label","Input","DataTable","TableCalon","modalCalon","setModalCalon","selectedData","setSelectedData","toggleModalCalon","columnCalon","name","selector","row","namaCalon","cell","fotoCalon","width","handleEdit","handleDelete","dataCalon","id","console","log","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Form, FormGroup, Label, Input } from \"reactstrap\";\r\nimport DataTable from \"react-data-table-component\";\r\n\r\nconst TableCalon = () => {\r\n  const [modalCalon, setModalCalon] = useState(false);\r\n  const [selectedData, setSelectedData] = useState(null);\r\n\r\n  const toggleModalCalon = () => {\r\n    setModalCalon(!modalCalon);\r\n  };\r\n\r\n  const columnCalon = [\r\n    {\r\n      name: \"Nama\",\r\n      selector: (row) => row.namaCalon,\r\n    },\r\n    {\r\n      name: \"Foto\",\r\n      cell: (row) => <img src={row.fotoCalon} alt={row.namaCalon} style={{ width: \"50px\" }} />,\r\n    },\r\n    {\r\n      name: \"Action\",\r\n      cell: (row) => (\r\n        <>\r\n          <Button onClick={() => handleEdit(row)} outline color=\"primary\" size=\"sm\">\r\n            Edit\r\n          </Button>\r\n          <Button onClick={() => handleDelete(row)} outline color=\"danger\" size=\"sm\">\r\n            Hapus\r\n          </Button>\r\n        </>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  const dataCalon = [\r\n    {\r\n      id: 1,\r\n      namaCalon: \"Joseph Stalin\",\r\n      fotoCalon: \"https://example.com/beetlejuice.jpg\",\r\n    },\r\n    {\r\n      id: 2,\r\n      namaCalon: \"Hideki Tojo\",\r\n      fotoCalon: \"https://example.com/ghostbusters.jpg\",\r\n    },\r\n  ];\r\n\r\n  const handleEdit = (row) => {\r\n    setSelectedData(row);\r\n    toggleModalCalon();\r\n  };\r\n\r\n  const handleDelete = (row) => {\r\n    console.log(\"Delete row:\", row);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <DataTable columns={columnCalon} data={dataCalon} />\r\n\r\n      <Modal isOpen={modalCalon} toggle={toggleModalCalon}>\r\n        <ModalHeader toggle={toggleModalCalon}>Edit Data</ModalHeader>\r\n        <ModalBody>\r\n          <Form>\r\n            <FormGroup>\r\n              <Label for=\"nama\">Nama</Label>\r\n              <Input type=\"text\" id=\"nama\" value={selectedData?.namaCalon} onChange={(e) => setSelectedData({ ...selectedData, namaCalon: e.target.value })} />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label for=\"foto\">Foto</Label>\r\n              <Input type=\"text\" id=\"foto\" value={selectedData?.fotoCalon} onChange={(e) => setSelectedData({ ...selectedData, fotoCalon: e.target.value })} />\r\n            </FormGroup>\r\n          </Form>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"primary\" onClick={() => console.log(\"Save changes\", selectedData)}>\r\n            Simpan\r\n          </Button>{\" \"}\r\n          <Button color=\"secondary\" onClick={toggleModalCalon}>\r\n            Batal\r\n          </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TableCalon;\r\n"]},"metadata":{},"sourceType":"module"}