{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\CBA\\\\E-Voting\\\\components\\\\Event\\\\dashboard.js\";\nimport React, { useEffect, useState } from \"react\"; // node.js library that concatenates classes (strings)\n\nimport { Bar } from \"react-chartjs-2\"; // reactstrap components\n\nimport { Button, Card, CardHeader, CardBody, NavItem, NavLink, Nav, Progress, Table, Container, Row, Col } from \"reactstrap\"; // layout for this page\n\nimport Admin from \"layouts/Admin.js\";\nimport { useRouter } from \"next/router\";\nimport axios from \"axios\"; // core components\n\nconst Dashboard = props => {\n  const router = useRouter();\n\n  const Chart = require(\"chart.js\");\n\n  const {\n    0: dataVote,\n    1: setDataVote\n  } = useState([]);\n  const eventId = router.query.eventId;\n  let chartHasilVote = {\n    options: {\n      scales: {\n        yAxes: [{\n          ticks: {\n            callback: function (value) {\n              if (!(value % 10)) {\n                //return '$' + value + 'k'\n                return value;\n              }\n            }\n          }\n        }]\n      },\n      tooltips: {\n        callbacks: {\n          label: function (item, data) {\n            var label = data.datasets[item.datasetIndex].label || \"\";\n            var yLabel = item.yLabel;\n            var content = \"\";\n\n            if (data.datasets.length > 1) {\n              content += label;\n            }\n\n            content += yLabel;\n            return content;\n          }\n        }\n      }\n    },\n    data: {\n      labels: dataVote && dataVote.name,\n      // labels: [\"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"],\n      datasets: [{\n        label: \"Sales\",\n        // data: [25, 20, 30, 22, 17, 29],\n        data: dataVote && dataVote.data,\n        maxBarThickness: 10\n      }]\n    }\n  };\n\n  const getData = async () => {\n    const {\n      data: res\n    } = await axios.get(`${process.env.NEXT_PUBLIC_URL}/dashboard/vote-candidate/${eventId}`);\n    setDataVote(res.data.series);\n  };\n\n  useEffect(() => {\n    getData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      fluid: true,\n      className: \"mt-3\",\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        className: \"justify-content-center\",\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          xl: \"6\",\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            className: \"shadow\",\n            children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n              className: \"bg-transparent\",\n              children: /*#__PURE__*/_jsxDEV(Row, {\n                className: \"align-items-center\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col\",\n                  children: /*#__PURE__*/_jsxDEV(\"h2\", {\n                    className: \"mb-0\",\n                    children: \"Hasil Vote\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 86,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"chart\",\n                children: /*#__PURE__*/_jsxDEV(Bar, {\n                  data: chartHasilVote.data,\n                  options: chartHasilVote.options\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 93,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\nDashboard.layout = Admin;\nexport default Dashboard;","map":{"version":3,"sources":["D:/CBA/E-Voting/components/Event/dashboard.js"],"names":["React","useEffect","useState","Bar","Button","Card","CardHeader","CardBody","NavItem","NavLink","Nav","Progress","Table","Container","Row","Col","Admin","useRouter","axios","Dashboard","props","router","Chart","require","dataVote","setDataVote","eventId","query","chartHasilVote","options","scales","yAxes","ticks","callback","value","tooltips","callbacks","label","item","data","datasets","datasetIndex","yLabel","content","length","labels","name","maxBarThickness","getData","res","get","process","env","NEXT_PUBLIC_URL","series","layout"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C,C,CACA;;AAEA,SAASC,GAAT,QAAoB,iBAApB,C,CACA;;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,UAAvB,EAAmCC,QAAnC,EAA6CC,OAA7C,EAAsDC,OAAtD,EAA+DC,GAA/D,EAAoEC,QAApE,EAA8EC,KAA9E,EAAqFC,SAArF,EAAgGC,GAAhG,EAAqGC,GAArG,QAAgH,YAAhH,C,CACA;;AACA,OAAOC,KAAP,MAAkB,kBAAlB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAC3B,QAAMC,MAAM,GAAGJ,SAAS,EAAxB;;AAEA,QAAMK,KAAK,GAAGC,OAAO,CAAC,UAAD,CAArB;;AACA,QAAM;AAAA,OAACC,QAAD;AAAA,OAAWC;AAAX,MAA0BvB,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAMwB,OAAO,GAAGL,MAAM,CAACM,KAAP,CAAaD,OAA7B;AAEA,MAAIE,cAAc,GAAG;AACnBC,IAAAA,OAAO,EAAE;AACPC,MAAAA,MAAM,EAAE;AACNC,QAAAA,KAAK,EAAE,CACL;AACEC,UAAAA,KAAK,EAAE;AACLC,YAAAA,QAAQ,EAAE,UAAUC,KAAV,EAAiB;AACzB,kBAAI,EAAEA,KAAK,GAAG,EAAV,CAAJ,EAAmB;AACjB;AACA,uBAAOA,KAAP;AACD;AACF;AANI;AADT,SADK;AADD,OADD;AAePC,MAAAA,QAAQ,EAAE;AACRC,QAAAA,SAAS,EAAE;AACTC,UAAAA,KAAK,EAAE,UAAUC,IAAV,EAAgBC,IAAhB,EAAsB;AAC3B,gBAAIF,KAAK,GAAGE,IAAI,CAACC,QAAL,CAAcF,IAAI,CAACG,YAAnB,EAAiCJ,KAAjC,IAA0C,EAAtD;AACA,gBAAIK,MAAM,GAAGJ,IAAI,CAACI,MAAlB;AACA,gBAAIC,OAAO,GAAG,EAAd;;AACA,gBAAIJ,IAAI,CAACC,QAAL,CAAcI,MAAd,GAAuB,CAA3B,EAA8B;AAC5BD,cAAAA,OAAO,IAAIN,KAAX;AACD;;AACDM,YAAAA,OAAO,IAAID,MAAX;AACA,mBAAOC,OAAP;AACD;AAVQ;AADH;AAfH,KADU;AA+BnBJ,IAAAA,IAAI,EAAE;AACJM,MAAAA,MAAM,EAAErB,QAAQ,IAAIA,QAAQ,CAACsB,IADzB;AAEJ;AACAN,MAAAA,QAAQ,EAAE,CACR;AACEH,QAAAA,KAAK,EAAE,OADT;AAEE;AACAE,QAAAA,IAAI,EAAEf,QAAQ,IAAIA,QAAQ,CAACe,IAH7B;AAIEQ,QAAAA,eAAe,EAAE;AAJnB,OADQ;AAHN;AA/Ba,GAArB;;AA6CA,QAAMC,OAAO,GAAG,YAAY;AAC1B,UAAM;AAAET,MAAAA,IAAI,EAAEU;AAAR,QAAgB,MAAM/B,KAAK,CAACgC,GAAN,CAAW,GAAEC,OAAO,CAACC,GAAR,CAAYC,eAAgB,6BAA4B3B,OAAQ,EAA7E,CAA5B;AACAD,IAAAA,WAAW,CAACwB,GAAG,CAACV,IAAJ,CAASe,MAAV,CAAX;AACD,GAHD;;AAKArD,EAAAA,SAAS,CAAC,MAAM;AACd+C,IAAAA,OAAO;AACR,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACE;AAAA,2BAEE,QAAC,SAAD;AAAW,MAAA,KAAK,MAAhB;AAAiB,MAAA,SAAS,EAAC,MAA3B;AAAA,6BACE,QAAC,GAAD;AAAK,QAAA,SAAS,EAAC,wBAAf;AAAA,+BACE,QAAC,GAAD;AAAK,UAAA,EAAE,EAAC,GAAR;AAAA,iCACE,QAAC,IAAD;AAAM,YAAA,SAAS,EAAC,QAAhB;AAAA,oCACE,QAAC,UAAD;AAAY,cAAA,SAAS,EAAC,gBAAtB;AAAA,qCACE,QAAC,GAAD;AAAK,gBAAA,SAAS,EAAC,oBAAf;AAAA,uCACE;AAAK,kBAAA,SAAS,EAAC,KAAf;AAAA,yCAEE;AAAI,oBAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBADF,eASE,QAAC,QAAD;AAAA,qCAEE;AAAK,gBAAA,SAAS,EAAC,OAAf;AAAA,uCACE,QAAC,GAAD;AAAK,kBAAA,IAAI,EAAEpB,cAAc,CAACW,IAA1B;AAAgC,kBAAA,OAAO,EAAEX,cAAc,CAACC;AAAxD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,oBATF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAFF,mBADF;AA2BD,CAxFD;;AA0FAV,SAAS,CAACoC,MAAV,GAAmBvC,KAAnB;AAEA,eAAeG,SAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\n// node.js library that concatenates classes (strings)\n\nimport { Bar } from \"react-chartjs-2\";\n// reactstrap components\nimport { Button, Card, CardHeader, CardBody, NavItem, NavLink, Nav, Progress, Table, Container, Row, Col } from \"reactstrap\";\n// layout for this page\nimport Admin from \"layouts/Admin.js\";\nimport { useRouter } from \"next/router\";\nimport axios from \"axios\";\n\n// core components\n\nconst Dashboard = (props) => {\n  const router = useRouter();\n\n  const Chart = require(\"chart.js\");\n  const [dataVote, setDataVote] = useState([]);\n  const eventId = router.query.eventId;\n\n  let chartHasilVote = {\n    options: {\n      scales: {\n        yAxes: [\n          {\n            ticks: {\n              callback: function (value) {\n                if (!(value % 10)) {\n                  //return '$' + value + 'k'\n                  return value;\n                }\n              },\n            },\n          },\n        ],\n      },\n      tooltips: {\n        callbacks: {\n          label: function (item, data) {\n            var label = data.datasets[item.datasetIndex].label || \"\";\n            var yLabel = item.yLabel;\n            var content = \"\";\n            if (data.datasets.length > 1) {\n              content += label;\n            }\n            content += yLabel;\n            return content;\n          },\n        },\n      },\n    },\n    data: {\n      labels: dataVote && dataVote.name,\n      // labels: [\"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"],\n      datasets: [\n        {\n          label: \"Sales\",\n          // data: [25, 20, 30, 22, 17, 29],\n          data: dataVote && dataVote.data,\n          maxBarThickness: 10,\n        },\n      ],\n    },\n  };\n\n  const getData = async () => {\n    const { data: res } = await axios.get(`${process.env.NEXT_PUBLIC_URL}/dashboard/vote-candidate/${eventId}`);\n    setDataVote(res.data.series);\n  };\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  return (\n    <>\n      {/* Page content */}\n      <Container fluid className=\"mt-3\">\n        <Row className=\"justify-content-center\">\n          <Col xl=\"6\">\n            <Card className=\"shadow\">\n              <CardHeader className=\"bg-transparent\">\n                <Row className=\"align-items-center\">\n                  <div className=\"col\">\n                    {/* <h6 className=\"text-uppercase text-muted ls-1 mb-1\">Performance</h6> */}\n                    <h2 className=\"mb-0\">Hasil Vote</h2>\n                  </div>\n                </Row>\n              </CardHeader>\n              <CardBody>\n                {/* Chart */}\n                <div className=\"chart\">\n                  <Bar data={chartHasilVote.data} options={chartHasilVote.options} />\n                </div>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n      </Container>\n    </>\n  );\n};\n\nDashboard.layout = Admin;\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}