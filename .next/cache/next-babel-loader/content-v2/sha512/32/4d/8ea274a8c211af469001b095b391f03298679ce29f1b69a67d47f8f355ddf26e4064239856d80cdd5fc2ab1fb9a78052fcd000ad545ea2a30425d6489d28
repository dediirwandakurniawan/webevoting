{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React, { useEffect, useState } from \"react\";\nimport { useRouter } from \"next/router\"; // reactstrap components\n\nimport { Button, Card, CardHeader, CardBody, FormGroup, Form, Input, Container, Row, Col, Badge, Modal, ModalHeader, ModalBody, ModalFooter, Label } from \"reactstrap\"; // layout for this page\n\nimport Admin from \"layouts/Admin.js\"; // core components\n\nimport Header from \"components/Headers/Header.js\";\nimport DataTable from \"react-data-table-component\";\nimport axios from \"axios\";\nimport Swal from \"sweetalert2\";\nimport Cookies from \"universal-cookie\";\n\nconst Event = () => {\n  const router = useRouter();\n  const {\n    0: modal,\n    1: setModal\n  } = useState(false);\n  const {\n    0: namaEvent,\n    1: setNamaEvent\n  } = useState(\"\");\n  const {\n    0: deskripsiEvent,\n    1: setDeskripsiEvent\n  } = useState(\"\");\n  const {\n    0: activeEvent,\n    1: setActiveEvent\n  } = useState(false);\n  const {\n    0: jumlahKandidat,\n    1: setJumlahKandidat\n  } = useState(\"\");\n  const {\n    0: showFotoEvent,\n    1: setShowFotoEvent\n  } = useState(false);\n  const {\n    0: action,\n    1: setAction\n  } = useState(\"create\");\n  const {\n    0: events,\n    1: setEvents\n  } = useState([]);\n  const {\n    0: id,\n    1: setId\n  } = useState(null);\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const {\n    0: perPage,\n    1: setPerPage\n  } = useState(10);\n  const {\n    0: currentPage,\n    1: setCurrentPage\n  } = useState(1);\n  const {\n    0: totalRows,\n    1: setTotalRows\n  } = useState(0);\n  const cookies = new Cookies();\n  useEffect(() => {\n    getEvent();\n  }, [perPage, currentPage]);\n\n  const getEvent = async () => {\n    setLoading(true);\n    const {\n      data: res\n    } = await axios.get(`${process.env.NEXT_PUBLIC_URL}/event?page=${currentPage}&size=${perPage}`);\n    setTotalRows(res.data.totalData);\n    setEvents(res.data.content);\n    setLoading(false);\n  };\n\n  const toggle = () => setModal(!modal);\n\n  const columns = [{\n    name: \"Nama Event\",\n    selector: row => row.event_name ? row.event_name : \"-\"\n  }, {\n    name: \"Deskripsi\",\n    selector: row => row.description ? row.description : \"-\"\n  }, {\n    name: \"Active\",\n    selector: row => row.is_active === 1 ? /*#__PURE__*/_jsx(Badge, {\n      color: \"primary\",\n      pill: true,\n      children: \"Yes\"\n    }) : /*#__PURE__*/_jsx(Badge, {\n      color: \"danger\",\n      pill: true,\n      children: \"No\"\n    })\n  }, {\n    name: \"Kuota Vote\",\n    selector: row => row.quota\n  }, {\n    name: \"Tampilkan Foto\",\n    selector: row => row.show_photo === 1 ? /*#__PURE__*/_jsx(Badge, {\n      color: \"primary\",\n      pill: true,\n      children: \"Yes\"\n    }) : /*#__PURE__*/_jsx(Badge, {\n      color: \"danger\",\n      pill: true,\n      children: \"No\"\n    })\n  }, {\n    name: \"Action\",\n    selector: row => /*#__PURE__*/_jsxs(\"div\", {\n      style: {\n        width: 800,\n        height: \"auto\"\n      },\n      children: [/*#__PURE__*/_jsx(Button, {\n        color: \"primary\",\n        size: \"sm\",\n        onClick: () => handleDetailEvent(row.id),\n        children: \"Detail\"\n      }), /*#__PURE__*/_jsx(Button, {\n        color: \"success\",\n        size: \"sm\",\n        onClick: () => handleEditForm(row.id),\n        children: \"Edit\"\n      }), /*#__PURE__*/_jsx(Button, {\n        color: \"danger\",\n        size: \"sm\",\n        onClick: () => handleDelete(row.id),\n        children: \"Hapus\"\n      })]\n    })\n  }];\n\n  let handleDetailEvent = async id => {\n    router.push(`event/event-detail/${id}`);\n  };\n\n  let handleEditForm = async id => {\n    setAction(\"update\");\n    await axios.get(`${process.env.NEXT_PUBLIC_URL}/event/${id} `, {\n      headers: {\n        Authorization: `Bearer ${cookies.get(\"token\")}`\n      }\n    }).then(res => {\n      let data = res.data.data;\n      console.log(data, \"data detail edit\");\n      setId(data.id);\n      setNamaEvent(data.event_name);\n      setActiveEvent(data.is_active);\n      setShowFotoEvent(data.show_photo);\n      setJumlahKandidat(data.quota);\n      setDeskripsiEvent(data.description);\n      setModal(true);\n    }).catch(e => {\n      Swal.fire({\n        icon: \"error\",\n        title: \"Terjadi Kesalahan!\",\n        text: e\n      });\n    });\n  };\n\n  let handleDelete = id => {\n    Swal.fire({\n      title: \"Anda Yakin ?\",\n      text: \"Data yang telah dihapus tidak dapat dikembalikan!\",\n      icon: \"warning\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Yakin!\"\n    }).then(result => {\n      if (result.isConfirmed) {\n        axios.delete(`${process.env.NEXT_PUBLIC_URL}/event/${id} `, {\n          headers: {\n            Authorization: `Bearer ${cookies.get(\"token\")}`\n          }\n        }).then(res => {\n          Swal.fire({\n            icon: \"success\",\n            title: \"Berhasil\",\n            text: \"Data Berhasil Dihapus !\"\n          });\n          getEvent();\n        });\n      }\n    });\n  };\n\n  let handleSubmitEvent = async () => {\n    let data = {\n      event_name: namaEvent,\n      is_active: activeEvent,\n      quota: jumlahKandidat,\n      show_photo: showFotoEvent,\n      description: deskripsiEvent\n    };\n\n    if (action === \"create\") {\n      await axios.post(`${process.env.NEXT_PUBLIC_URL}/event`, data, {\n        headers: {\n          Authorization: `Bearer ${cookies.get(\"token\")}`\n        }\n      }).then(res => {\n        Swal.fire({\n          icon: \"success\",\n          title: \"Berhasil\",\n          text: \"Data Berhasil Disimpan !\"\n        });\n        setModal(false);\n        getEvent();\n      }).catch(e => {\n        console.log(e);\n\n        if (e.response.data.error_messages) {\n          Swal.fire({\n            icon: \"error\",\n            title: \"Terjadi Kesalahan!\",\n            text: e.response.data.error_messages[0].msg\n          });\n        } else {\n          Swal.fire({\n            icon: \"error\",\n            title: \"Terjadi Kesalahan!\",\n            text: e\n          });\n        }\n      });\n    } else {\n      await axios.put(`${process.env.NEXT_PUBLIC_URL}/event/${id}`, data, {\n        headers: {\n          Authorization: `Bearer ${cookies.get(\"token\")}`\n        }\n      }).then(res => {\n        Swal.fire({\n          icon: \"success\",\n          title: \"Berhasil\",\n          text: \"Data Berhasil Disimpan !\"\n        });\n        setModal(false);\n        getEvent();\n      }).catch(e => {\n        console.log(e);\n\n        if (e.response.data.error_messages) {\n          Swal.fire({\n            icon: \"error\",\n            title: \"Terjadi Kesalahan!\",\n            text: e.response.data.error_messages[0].msg\n          });\n        } else {\n          Swal.fire({\n            icon: \"error\",\n            title: \"Terjadi Kesalahan!\",\n            text: e\n          });\n        }\n      });\n    }\n  };\n\n  let handleTambah = () => {\n    setAction(\"create\");\n    setModal(true);\n  };\n\n  let onClosedModal = () => {\n    setId(null);\n    setNamaEvent(\"\");\n    setActiveEvent(false);\n    setShowFotoEvent(false);\n    setJumlahKandidat(\"\");\n    setDeskripsiEvent(\"\");\n  };\n\n  let handleChange = (e, field) => {\n    let data = e.target.value;\n\n    if (field === \"nama\") {\n      setNamaEvent(data);\n    } else if (field === \"active\") {\n      setActiveEvent(e.target.checked);\n    } else if (field === \"deskripsi\") {\n      setDeskripsiEvent(data);\n    } else if (field === \"jumlah\") {\n      setJumlahKandidat(data);\n    } else if (field === \"foto\") {\n      setShowFotoEvent(e.target.checked);\n    }\n  };\n\n  const handlePageChange = page => {\n    setCurrentPage(page);\n  };\n\n  const handlePerRowsChange = async (newPerPage, page) => {\n    setPerPage(newPerPage);\n  };\n\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(Header, {}), /*#__PURE__*/_jsx(Container, {\n      className: \"mt--7\",\n      fluid: true,\n      children: /*#__PURE__*/_jsx(Row, {\n        children: /*#__PURE__*/_jsx(Col, {\n          children: /*#__PURE__*/_jsxs(Card, {\n            className: \"shadow\",\n            children: [/*#__PURE__*/_jsx(CardHeader, {\n              className: \"bg-transparent\",\n              children: /*#__PURE__*/_jsx(\"h3\", {\n                className: \"mb-0\",\n                children: \"Event\"\n              })\n            }), /*#__PURE__*/_jsxs(CardBody, {\n              children: [/*#__PURE__*/_jsx(Button, {\n                color: \"danger\",\n                onClick: () => handleTambah(),\n                children: \"Tambah Event\"\n              }), /*#__PURE__*/_jsx(Row, {\n                children: /*#__PURE__*/_jsx(Col, {\n                  children: /*#__PURE__*/_jsx(DataTable, {\n                    columns: columns,\n                    data: events,\n                    pagination: true,\n                    progressPending: loading,\n                    paginationTotalRows: totalRows,\n                    paginationDefaultPage: currentPage,\n                    onChangeRowsPerPage: handlePerRowsChange,\n                    onChangePage: handlePageChange\n                  })\n                })\n              })]\n            })]\n          })\n        })\n      })\n    }), /*#__PURE__*/_jsxs(Modal, {\n      isOpen: modal,\n      toggle: toggle,\n      onClosed: onClosedModal,\n      children: [/*#__PURE__*/_jsx(ModalHeader, {\n        toggle: toggle,\n        children: \"Modal title\"\n      }), /*#__PURE__*/_jsx(ModalBody, {\n        children: /*#__PURE__*/_jsxs(Form, {\n          children: [/*#__PURE__*/_jsxs(FormGroup, {\n            children: [/*#__PURE__*/_jsx(Label, {\n              for: \"namaEvent\",\n              children: \"Event\"\n            }), /*#__PURE__*/_jsx(Input, {\n              id: \"namaEvent\",\n              name: \"event\",\n              placeholder: \"Masukkan Nama Event\",\n              type: \"text\",\n              onChange: e => handleChange(e, \"nama\"),\n              value: namaEvent\n            })]\n          }), /*#__PURE__*/_jsxs(FormGroup, {\n            check: true,\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsx(Input, {\n              type: \"checkbox\",\n              checked: activeEvent,\n              defaultValue: activeEvent,\n              onChange: e => handleChange(e, \"active\")\n            }), \" \", /*#__PURE__*/_jsx(Label, {\n              check: true,\n              children: \"Active\"\n            })]\n          }), /*#__PURE__*/_jsxs(FormGroup, {\n            children: [/*#__PURE__*/_jsx(Label, {\n              for: \"deskripsi\",\n              children: \"Deskripsi Event\"\n            }), /*#__PURE__*/_jsx(Input, {\n              id: \"deskripsi\",\n              name: \"deskripsi\",\n              type: \"textarea\",\n              onChange: e => handleChange(e, \"deskripsi\"),\n              value: deskripsiEvent\n            })]\n          }), /*#__PURE__*/_jsxs(FormGroup, {\n            children: [/*#__PURE__*/_jsx(Label, {\n              for: \"jumlahKandidat\",\n              children: \"Jumlah Kandidat yang Dapat Dipilih\"\n            }), /*#__PURE__*/_jsx(Input, {\n              id: \"jumlahKandidat\",\n              name: \"jumlah_kandidat\",\n              placeholder: \"Masukkan jumlah kandidat\",\n              type: \"number\",\n              onChange: e => handleChange(e, \"jumlah\"),\n              value: jumlahKandidat\n            })]\n          }), /*#__PURE__*/_jsxs(FormGroup, {\n            check: true,\n            children: [/*#__PURE__*/_jsx(Input, {\n              type: \"checkbox\",\n              checked: showFotoEvent,\n              onChange: e => handleChange(e, \"foto\")\n            }), \" \", /*#__PURE__*/_jsx(Label, {\n              check: true,\n              children: \"Tampilkan Foto Kandidat\"\n            })]\n          })]\n        })\n      }), /*#__PURE__*/_jsxs(ModalFooter, {\n        children: [/*#__PURE__*/_jsx(Button, {\n          color: \"primary\",\n          onClick: () => handleSubmitEvent(),\n          children: \"Simpan\"\n        }), \" \", /*#__PURE__*/_jsx(Button, {\n          color: \"secondary\",\n          onClick: toggle,\n          children: \"Cancel\"\n        })]\n      })]\n    })]\n  });\n};\n\nEvent.layout = Admin;\nexport default Event;","map":null,"metadata":{},"sourceType":"module"}