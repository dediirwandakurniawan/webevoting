{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React, { useState, useEffect } from \"react\";\nimport { useRouter } from \"next/router\"; // reactstrap components\n\nimport { Button, Card, CardHeader, CardBody, FormGroup, Form, Input, Container, Row, Col, Badge, Modal, ModalHeader, ModalBody, ModalFooter, Label } from \"reactstrap\"; // core components\n\nimport DataTable from \"react-data-table-component\";\nimport Swal from \"sweetalert2\";\nimport axios from \"axios\";\nimport Cookies from \"universal-cookie\";\n\nconst Token = () => {\n  const router = useRouter();\n  const eventId = router.query.eventId;\n  const cookies = new Cookies();\n  const {\n    0: modal,\n    1: setModal\n  } = useState(false);\n  const {\n    0: action,\n    1: setAction\n  } = useState(\"create\");\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const {\n    0: perPage,\n    1: setPerPage\n  } = useState(10);\n  const {\n    0: currentPage,\n    1: setCurrentPage\n  } = useState(1);\n  const {\n    0: totalRows,\n    1: setTotalRows\n  } = useState(0);\n  const {\n    0: data,\n    1: setData\n  } = useState([]);\n  const {\n    0: jumlahToken,\n    1: setJumlahToken\n  } = useState(0);\n\n  const toggle = () => setModal(!modal);\n\n  const columns = [{\n    name: \"Tanggal Generate\",\n    selector: row => row.created_date\n  }, {\n    name: \"Token\",\n    selector: row => row.token\n  }, {\n    name: \"Is Valid\",\n    selector: row => /*#__PURE__*/_jsx(_Fragment, {\n      children: row.is_valid == 1 ? /*#__PURE__*/_jsx(Badge, {\n        color: \"primary\",\n        pill: true,\n        children: \"Yes\"\n      }) : /*#__PURE__*/_jsx(Badge, {\n        color: \"danger\",\n        pill: true,\n        children: \"No\"\n      })\n    })\n  }, {\n    name: \"Done Vote\",\n    selector: row => /*#__PURE__*/_jsx(_Fragment, {\n      children: row.is_vote == 1 ? /*#__PURE__*/_jsx(Badge, {\n        color: \"primary\",\n        pill: true,\n        children: \"Yes\"\n      }) : /*#__PURE__*/_jsx(Badge, {\n        color: \"danger\",\n        pill: true,\n        children: \"No\"\n      })\n    })\n  }, {\n    name: \"Action\",\n    selector: row => /*#__PURE__*/_jsx(_Fragment, {\n      children: /*#__PURE__*/_jsx(Button, {\n        onClick: () => handleDelete(row.id),\n        color: \"danger\",\n        size: \"sm\",\n        children: \"Hapus\"\n      })\n    })\n  }];\n\n  const handleDelete = id => {\n    Swal.fire({\n      title: \"Anda Yakin ?\",\n      text: \"Data yang telah dihapus tidak dapat dikembalikan!\",\n      icon: \"warning\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Yakin!\"\n    }).then(result => {\n      if (result.isConfirmed) {\n        axios.delete(`${process.env.NEXT_PUBLIC_URL}/token/${id} `, {\n          headers: {\n            Authorization: `Bearer ${cookies.get(\"token\")}`\n          }\n        }).then(res => {\n          Swal.fire({\n            icon: \"success\",\n            title: \"Berhasil\",\n            text: \"Data Berhasil Dihapus !\"\n          });\n          getData();\n        });\n      }\n    });\n  };\n\n  const getData = async () => {\n    setLoading(true);\n    const {\n      data: res\n    } = await axios.get(`${process.env.NEXT_PUBLIC_URL}/token/${eventId}/?page=${currentPage}&size=${perPage}`);\n    setTotalRows(res.data.totalData);\n    setData(res.data.content);\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  let handleSubmit = async () => {\n    const data = {\n      number_token: jumlahToken\n    };\n    console.log(data);\n    await axios.post(`${process.env.NEXT_PUBLIC_URL}/token/${eventId}`, data, {\n      headers: {\n        Authorization: `Bearer ${cookies.get(\"token\")}`\n      }\n    }).then(res => {\n      Swal.fire({\n        icon: \"success\",\n        title: \"Berhasil\",\n        text: \"Token berhasil dibuat !\"\n      });\n      setModal(false);\n      getData();\n    }).catch(e => {\n      var _e$response, _e$response$data;\n\n      console.log(e);\n\n      if (e !== null && e !== void 0 && (_e$response = e.response) !== null && _e$response !== void 0 && (_e$response$data = _e$response.data) !== null && _e$response$data !== void 0 && _e$response$data.error_messages) {\n        var _e$response2, _e$response2$data, _e$response2$data$err;\n\n        Swal.fire({\n          icon: \"error\",\n          title: \"Terjadi Kesalahan!\",\n          text: e === null || e === void 0 ? void 0 : (_e$response2 = e.response) === null || _e$response2 === void 0 ? void 0 : (_e$response2$data = _e$response2.data) === null || _e$response2$data === void 0 ? void 0 : (_e$response2$data$err = _e$response2$data.error_messages[0]) === null || _e$response2$data$err === void 0 ? void 0 : _e$response2$data$err.msg\n        });\n      } else {\n        Swal.fire({\n          icon: \"error\",\n          title: \"Terjadi Kesalahan!\",\n          text: e\n        });\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(Row, {\n      children: /*#__PURE__*/_jsx(Col, {\n        children: /*#__PURE__*/_jsx(Card, {\n          className: \"shadow\",\n          children: /*#__PURE__*/_jsxs(CardBody, {\n            children: [/*#__PURE__*/_jsx(Button, {\n              color: \"danger\",\n              onClick: toggle,\n              children: \"Generate Token\"\n            }), /*#__PURE__*/_jsx(Row, {\n              children: /*#__PURE__*/_jsx(Col, {\n                children: /*#__PURE__*/_jsx(DataTable, {\n                  columns: columns,\n                  data: data,\n                  pagination: true\n                })\n              })\n            })]\n          })\n        })\n      })\n    }), /*#__PURE__*/_jsxs(Modal, {\n      isOpen: modal,\n      toggle: toggle,\n      children: [/*#__PURE__*/_jsx(ModalHeader, {\n        toggle: toggle,\n        children: \"Generate Token\"\n      }), /*#__PURE__*/_jsx(ModalBody, {\n        children: /*#__PURE__*/_jsx(Form, {\n          children: /*#__PURE__*/_jsxs(FormGroup, {\n            children: [/*#__PURE__*/_jsx(Label, {\n              for: \"jumlahToken\",\n              children: \"Jumlah Token\"\n            }), /*#__PURE__*/_jsx(Input, {\n              id: \"jumlahToken\",\n              name: \"jumlah_token\",\n              placeholder: \"Masukkan jumlah token\",\n              type: \"number\",\n              onChange: e => setJumlahToken(e.target.value)\n            })]\n          })\n        })\n      }), /*#__PURE__*/_jsxs(ModalFooter, {\n        children: [/*#__PURE__*/_jsx(Button, {\n          color: \"primary\",\n          onClick: () => handleSubmit(),\n          children: \"Simpan\"\n        }), \" \", /*#__PURE__*/_jsx(Button, {\n          color: \"secondary\",\n          onClick: toggle,\n          children: \"Cancel\"\n        })]\n      })]\n    })]\n  });\n};\n\nexport default Token;","map":null,"metadata":{},"sourceType":"module"}