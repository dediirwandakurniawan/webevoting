{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Project\\\\eVoting_FE\\\\components\\\\Event\\\\dashboard.js\";\nimport React, { useEffect, useState } from \"react\"; // node.js library that concatenates classes (strings)\n\nimport { Bar } from \"react-chartjs-2\"; // reactstrap components\n\nimport { Button, Card, CardHeader, CardBody, NavItem, NavLink, Nav, Progress, Table, Container, Row, Col } from \"reactstrap\"; // layout for this page\n\nimport Admin from \"layouts/Admin.js\";\nimport { useRouter } from \"next/router\";\nimport axios from \"axios\";\nimport Highcharts from \"highcharts\";\nimport HighchartsReact from \"highcharts-react-official\"; // core components\n\nconst Dashboard = props => {\n  var _dataVote$series;\n\n  const router = useRouter(); // const Chart = require(\"chart.js\");\n\n  const {\n    0: dataVote,\n    1: setDataVote\n  } = useState([]);\n  const {\n    0: showChart,\n    1: setShowChart\n  } = useState(false);\n  const eventId = router.query.eventId;\n\n  const getData = async () => {\n    const {\n      data: res\n    } = await axios.get(`${process.env.NEXT_PUBLIC_URL}/dashboard/vote-candidate/${eventId}`);\n    console.log(res.data);\n    setDataVote(res.data);\n  };\n\n  const options = {\n    chart: {\n      type: \"column\"\n    },\n    title: {\n      text: \"\",\n      align: \"left\"\n    },\n    subtitle: {\n      text: \"\",\n      align: \"left\"\n    },\n    xAxis: {\n      categories: dataVote && dataVote.categories,\n      crosshair: true,\n      accessibility: {\n        description: \"Kandidat\"\n      }\n    },\n    credits: {\n      enabled: false\n    },\n    yAxis: {\n      min: 0,\n      title: {\n        text: \"Jumlah\"\n      },\n      Animation: true\n    },\n    tooltip: {\n      valueSuffix: \"\"\n    },\n    plotOptions: {\n      column: {\n        pointPadding: 0.2,\n        borderWidth: 0\n      }\n    },\n    series: [{\n      name: \"Kandidat\",\n      data: dataVote && (dataVote === null || dataVote === void 0 ? void 0 : (_dataVote$series = dataVote.series) === null || _dataVote$series === void 0 ? void 0 : _dataVote$series.data)\n    }]\n  };\n\n  const handleActiveChart = () => {\n    getData();\n    setShowChart(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      fluid: true,\n      className: \"mt-3\",\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        className: \"justify-content-center\",\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          xl: \"8\",\n          md: \"12\",\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            className: \"shadow\",\n            children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n              className: \"bg-transparent\",\n              children: /*#__PURE__*/_jsxDEV(Row, {\n                className: \"align-items-center\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col\",\n                  children: /*#__PURE__*/_jsxDEV(\"h2\", {\n                    className: \"mb-0\",\n                    children: \"Hasil Vote\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 103,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 101,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => handleActiveChart(),\n                color: \"success\",\n                className: \"mb-3\",\n                children: \"Kalkulasi Sekarang\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(HighchartsReact, {\n                highcharts: Highcharts,\n                options: options\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\nDashboard.layout = Admin;\nexport default Dashboard;","map":{"version":3,"sources":["D:/Project/eVoting_FE/components/Event/dashboard.js"],"names":["React","useEffect","useState","Bar","Button","Card","CardHeader","CardBody","NavItem","NavLink","Nav","Progress","Table","Container","Row","Col","Admin","useRouter","axios","Highcharts","HighchartsReact","Dashboard","props","router","dataVote","setDataVote","showChart","setShowChart","eventId","query","getData","data","res","get","process","env","NEXT_PUBLIC_URL","console","log","options","chart","type","title","text","align","subtitle","xAxis","categories","crosshair","accessibility","description","credits","enabled","yAxis","min","Animation","tooltip","valueSuffix","plotOptions","column","pointPadding","borderWidth","series","name","handleActiveChart","layout"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n// node.js library that concatenates classes (strings)\r\n\r\nimport { Bar } from \"react-chartjs-2\";\r\n// reactstrap components\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  NavItem,\r\n  NavLink,\r\n  Nav,\r\n  Progress,\r\n  Table,\r\n  Container,\r\n  Row,\r\n  Col,\r\n} from \"reactstrap\";\r\n// layout for this page\r\nimport Admin from \"layouts/Admin.js\";\r\nimport { useRouter } from \"next/router\";\r\nimport axios from \"axios\";\r\nimport Highcharts from \"highcharts\";\r\nimport HighchartsReact from \"highcharts-react-official\";\r\n\r\n// core components\r\n\r\nconst Dashboard = (props) => {\r\n  const router = useRouter();\r\n\r\n  // const Chart = require(\"chart.js\");\r\n  const [dataVote, setDataVote] = useState([]);\r\n  const [showChart, setShowChart] = useState(false);\r\n  const eventId = router.query.eventId;\r\n\r\n  const getData = async () => {\r\n    const { data: res } = await axios.get(\r\n      `${process.env.NEXT_PUBLIC_URL}/dashboard/vote-candidate/${eventId}`\r\n    );\r\n    console.log(res.data);\r\n    setDataVote(res.data);\r\n  };\r\n\r\n  const options = {\r\n    chart: {\r\n      type: \"column\",\r\n    },\r\n    title: {\r\n      text: \"\",\r\n      align: \"left\",\r\n    },\r\n    subtitle: {\r\n      text: \"\",\r\n      align: \"left\",\r\n    },\r\n\r\n    xAxis: {\r\n      categories: dataVote && dataVote.categories,\r\n      crosshair: true,\r\n      accessibility: {\r\n        description: \"Kandidat\",\r\n      },\r\n    },\r\n    credits: {\r\n      enabled: false,\r\n    },\r\n    yAxis: {\r\n      min: 0,\r\n      title: {\r\n        text: \"Jumlah\",\r\n      },\r\n      Animation: true,\r\n    },\r\n    tooltip: {\r\n      valueSuffix: \"\",\r\n    },\r\n    plotOptions: {\r\n      column: {\r\n        pointPadding: 0.2,\r\n        borderWidth: 0,\r\n      },\r\n    },\r\n    series: [{ name: \"Kandidat\", data: dataVote && dataVote?.series?.data }],\r\n  };\r\n\r\n  const handleActiveChart = () => {\r\n    getData();\r\n    setShowChart(true);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* Page content */}\r\n      <Container fluid className=\"mt-3\">\r\n        <Row className=\"justify-content-center\">\r\n          <Col xl=\"8\" md=\"12\">\r\n            <Card className=\"shadow\">\r\n              <CardHeader className=\"bg-transparent\">\r\n                <Row className=\"align-items-center\">\r\n                  <div className=\"col\">\r\n                    {/* <h6 className=\"text-uppercase text-muted ls-1 mb-1\">Performance</h6> */}\r\n                    <h2 className=\"mb-0\">Hasil Vote</h2>\r\n                  </div>\r\n                </Row>\r\n              </CardHeader>\r\n              <CardBody>\r\n                <Button\r\n                  onClick={() => handleActiveChart()}\r\n                  color=\"success\"\r\n                  className=\"mb-3\"\r\n                >\r\n                  Kalkulasi Sekarang\r\n                </Button>\r\n                {/* Chart */}\r\n                {/* <div className=\"chart\">\r\n                  <Bar data={chartHasilVote.data} options={chartHasilVote.options} />\r\n                </div> */}\r\n                <HighchartsReact highcharts={Highcharts} options={options} />\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nDashboard.layout = Admin;\r\n\r\nexport default Dashboard;\r\n"]},"metadata":{},"sourceType":"module"}